{"version":3,"sources":["covers/model1/index.js","App.js","index.js"],"names":["Container","styled","div","props","color","Title","p","ImageContainer","background","Model1","ref","generatedContentRef","title","image","App","useState","setTitle","setColor","setImage","useRef","console","log","type","value","onChange","e","target","URL","createObjectURL","files","hex","onClick","domtoimage","toBlob","current","quality","scale","then","dataUrl","FileSaver","saveAs","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mOAGMA,EAAYC,IAAOC,IAAV,0LAGO,SAACC,GAAD,OAAWA,EAAMC,SAOjCC,EAAQJ,IAAOK,EAAV,6MAWLC,EAAiBN,IAAOC,IAAV,yJAGK,SAAAC,GAAK,OAAIA,EAAMK,cAKzB,SAASC,EAAON,GAC7B,OACE,eAACH,EAAD,CAAWU,IAAKP,EAAMQ,oBAAqBP,MAAOD,EAAMC,MAAxD,UACE,cAACC,EAAD,UAAQF,EAAMS,QACd,cAACL,EAAD,CAAgBC,WAAYL,EAAMU,WC3BxC,IAAMb,EAAYC,IAAOC,IAAV,qIAQA,SAASY,IAAO,IAAD,EACFC,mBAAS,sBADP,mBACrBH,EADqB,KACdI,EADc,OAEFD,mBAAS,WAFP,mBAErBX,EAFqB,KAEda,EAFc,OAGFF,mBAAS,MAHP,mBAGrBF,EAHqB,KAGdK,EAHc,KAKtBP,EAAsBQ,iBAAO,MAWnC,OATAC,QAAQC,IAAI,CAAER,UAUZ,eAAC,EAAD,WACE,uBAAOS,KAAK,OAAOC,MAAOX,EAAOY,SAAU,SAAAC,GAAC,OAAIT,EAASS,EAAEC,OAAOH,UAClE,uBAAOD,KAAK,OAAOE,SAAU,SAAAC,GAAC,OAAIP,EAASS,IAAIC,gBAAgBH,EAAEC,OAAOG,MAAM,QAC9E,cAAC,IAAD,CAAczB,MAAOA,EAAOoB,SAAU,SAAApB,GAAK,OAAIa,EAASb,EAAM0B,QAC9D,cAACrB,EAAD,CACEE,oBAAqBA,EACrBC,MAAOA,EACPR,MAAOA,EACPS,MAAOA,IACT,wBAAQkB,QAjBZ,WAEEC,IAAWC,OAAOtB,EAAoBuB,QAAS,CAAEC,QAAS,EAAGC,MAAO,IAAKC,MAAK,SAACC,GAC7EC,IAAUC,OAAOF,EAAS,iBAc1B,+BCvCNG,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC7B,EAAD,MAEF8B,SAASC,eAAe,W","file":"static/js/main.89a679a8.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  width: 240px;\n  height: 240px;\n  background-color: ${(props) => props.color};\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Title = styled.p`\n  font-family: Arial;\n  font-style: normal;\n  font-weight: bold;\n  font-size: 26px;\n  line-height: 1;\n  text-align: center;\n  letter-spacing: -0.04em;\n  color: #FFFFFF;\n`;\n\nconst ImageContainer = styled.div`\n  width: 210px;\n  height: 130px;\n  background: #fff url(${props => props.background});\n  background-size: cover;\n  background-repeat: no-repeat;\n`;\n\nexport default function Model1(props) {\n  return (\n    <Container ref={props.generatedContentRef} color={props.color}>\n      <Title>{props.title}</Title>\n      <ImageContainer background={props.image} />\n    </Container>\n  );\n}","import React, { useState, useRef } from 'react';\nimport styled from 'styled-components';\nimport domtoimage from 'dom-to-image-more'\nimport FileSaver from 'file-saver';\nimport { ChromePicker } from 'react-color';\n\n\nimport Model1 from './covers/model1';\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100vw;\n  height: 100vh;\n`;\n\nexport default function App() {\n  const [title, setTitle] = useState('Your playlist name');\n  const [color, setColor] = useState('#7900D9');\n  const [image, setImage] = useState(null);\n\n  const generatedContentRef = useRef(null);\n\n  console.log({ image })\n\n  function createImageToDownload() {\n    // Generate meme image from the content of 'content' div\n    domtoimage.toBlob(generatedContentRef.current, { quality: 1, scale: 3 }).then((dataUrl) => {\n      FileSaver.saveAs(dataUrl, \"cover.png\");    \n    })\n  }\n\n  return (\n    <Container>\n      <input type=\"text\" value={title} onChange={e => setTitle(e.target.value)} />\n      <input type=\"file\" onChange={e => setImage(URL.createObjectURL(e.target.files[0]))} />\n      <ChromePicker color={color} onChange={color => setColor(color.hex)} />\n      <Model1\n        generatedContentRef={generatedContentRef}\n        title={title}\n        color={color}\n        image={image} />\n      <button onClick={createImageToDownload}>Download Image</button>\n    </Container>\n  );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}